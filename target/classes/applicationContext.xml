<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- ================ AOP ================== -->

    <!--注册事务管理器-->
    <bean id="myTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="myDataSource" />
    </bean>

    <!--注册事务通知-->
    <tx:advice id="txAdvice" transaction-manager="myTransactionManager">
        <tx:attributes>
            <!--为每一个连接点指定索要应用的事务属性-->
            <tx:method name="open*" isolation="DEFAULT" propagation="REQUIRED" />
            <tx:method name="buyStock" isolation="DEFAULT" propagation="REQUIRED" rollback-for="BuyStockException" />
        </tx:attributes>
    </tx:advice>
    
    <!--AOP配置-->
    <aop:config>
        <!--指定切入点-->
        <aop:pointcut id="myPointcut" expression="execution(* *..service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut"/>
    </aop:config>
    
    <!--注册事务注解驱动-->
    <!--<tx:annotation-driven transaction-manager="myTransactionManager" />-->

    <!--生成事务代理对象-->
    <!--<bean id="serviceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">-->
        <!--<property name="transactionManager" ref="myTransactionManager" />-->
        <!--<property name="target" ref="buyStockService" />-->
        <!--<property name="transactionAttributes">-->
            <!--<props>-->
                <!--<prop key="open*">ISOLATION_DEFAULT,PROPAGATION_REQUIRED</prop>-->
                <!--&lt;!&ndash; -异常:表示发生指定异常后回滚,这时的异常通常是受查异常&ndash;&gt;-->
                <!--&lt;!&ndash; +异常:表示发生指定异常后提交,这时的异常通常是运行时异常&ndash;&gt;-->
                <!--<prop key="buyStock">ISOLATION_DEFAULT,PROPAGATION_REQUIRED, -BuyStockException</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->


    <!-- ================ IOC =================== -->
    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <property name="driverClass" value="${jdbc.driver}"/>
    <property name="jdbcUrl" value="${jdbc.url}" />
    <property name="user" value="${jdbc.user}" />
    <property name="password" value="${jdbc.password}" />
    </bean>

    <context:property-placeholder location="jdbc.properties" />

    <bean id="mySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="mybatis.xml" />
        <property name="dataSource" ref="myDataSource" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="mySqlSessionFactory" />
        <property name="basePackage" value="stock.dao" />
    </bean>

    <!--<bean id="accountDao" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
       <!--<property name="sqlSessionFactory" ref="mySqlSessionFactory" />-->
        <!--<property name="mapperInterface" value="stock.dao.IAccountDao" />-->
    <!--</bean>-->
    <!---->
    <!--<bean id="stockDao" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="sqlSessionFactory" ref="mySqlSessionFactory" />-->
        <!--<property name="mapperInterface" value="stock.dao.IStockDao" />-->
    <!--</bean>-->

    <bean id="buyStockService" class="stock.service.BuyStockServiceImpl">
        <property name="adao" ref="IAccountDao" />
        <property name="sdao" ref="IStockDao" />
        <!--<property name="adao" ref="accountDao" />-->
        <!--<property name="sdao" ref="stockDao" />-->
    </bean>

    <!--<bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
        <!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
        <!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/day20" />-->
        <!--<property name="username" value="root" />-->
        <!--<property name="password" value="yesyes" />-->
    <!--</bean>-->

    <!--<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource">-->
        <!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
        <!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/day20" />-->
        <!--<property name="username" value="root" />-->
        <!--<property name="password" value="yesyes" />-->
    <!--</bean>-->

    <!--<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--<property name="driverClass" value="${jdbc.driver}" />-->
        <!--<property name="jdbcUrl" value="${jdbc.url}" />-->
        <!--<property name="user" value="${jdbc.user}" />-->
        <!--<property name="password" value="${jdbc.password}" />-->
    <!--</bean>-->

    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="location" value="jdbc.properties" />-->
    <!--</bean>-->

    <!--<bean id="myJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
        <!--<property name="dataSource" ref="myDataSource" />-->
    <!--</bean>-->

    <!--<bean id="myStudentDao" class="dao.StudentDaoImpl">-->
        <!--<property name="jdbcTemplate" ref="myJdbcTemplate" />-->
    <!--</bean>-->

    <!--<bean id="myStudentService" class="service.StudentServiceImpl">-->
        <!--<property name="dao" ref="myStudentDao" />-->
    <!--</bean>-->

    <!--<bean id="myAspect" class="aspectxml.MyAspect" />-->
    <!--<bean id="someService" class="aop.ISomeServiceImpl" />-->

    <!--<aop:config>-->
        <!--<aop:pointcut id="doFirstPointcut" expression="execution(* *..ISomeService.doFirst(..))" />-->
        <!--<aop:pointcut id="doSecondPointcut" expression="execution(* *..ISomeService.doSecond(..))" />-->

        <!--<aop:aspect ref="myAspect">-->
            <!--<aop:before method="before" pointcut-ref="doFirstPointcut"/>-->
            <!--<aop:before method="before(org.aspectj.lang.JoinPoint)" pointcut-ref="doFirstPointcut" />-->

            <!--<aop:after-returning method="myAfter" pointcut-ref="doSecondPointcut" returning="result" />-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->


    <!--<bean id="myAspect" class="aspect.MyAspect" />-->
    <!--<bean id="someService" class="aop.ISomeServiceImpl" />-->

    <!--<aop:aspectj-autoproxy />-->

    <!--<bean id="someService" class="aop.ISomeServiceImpl" />-->
    <!--<bean id="someService2" class="aop.ISomeServiceImpl" />-->

    <!--<bean id="myAdvice" class="aop.MyMethodBeforeAdvice" />-->

    <!--<bean id="myAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">-->
        <!--<property name="advice" ref="myAdvice" />-->
        <!--<property name="mappedName" value="doFirst" />-->
    <!--</bean>-->
    <!--<bean id="myAdvisor2" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">-->
        <!--<property name="advice" ref="myAdvice" />-->
        <!--<property name="mappedName" value="doSecond" />-->
    <!--</bean>-->

    <!--<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">-->
        <!--<property name="beanNames" value="someService" />-->
        <!--<property name="interceptorNames" value="myAdvisor" />-->
    <!--</bean>-->
</beans>